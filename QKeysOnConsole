#!/usr/bin/env python3
################################################################################
# QKeysOnConsole - Outputs the current keys you're pressing on the console.    #
#                                                                              #
# Requires Evdev and QT5.                                                      #
#                                                                              #
# This software must be run as root, or you must give permission to access the #
# keyboard using something like udev. This makes sense since this program is   #
# basically a keylogger, except it doesn't save the keystrokes or send them    #
# anywhere.                                                                    #
################################################################################
#    This program is free software: you can redistribute it and/or modify      #
#    it under the terms of the GNU General Public License as published by      #
#    the Free Software Foundation, either version 3 of the License, or         #
#    (at your option) any later version.                                       #
#                                                                              #
#    This program is distributed in the hope that it will be useful,           #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of            #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             #
#    GNU General Public License for more details.                              #
#                                                                              #
#    You should have received a copy of the GNU General Public License         #
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.     #
################################################################################

import sys

from PyQt5.QtWidgets import QApplication # only using to sleep main thread
from PyQt5.QtCore import QObject
from QKeysOnScreen import QKOSCommunicationObject, QKOSThread
from utils import *

class QKeysOnConsole:
    def __init__(self, qo):
        super(QKeysOnConsole, self).__init__()
        self.qo = qo
        self.ek = EvdevKeymon()

    def processIncoming(self, ev):
        newtext = self.ek.processIncoming(ev)
        if not newtext: return

        if self.ek.event is not None:
            self.qo.message.emit(self.ek.event)
            self.ek.event = None
        print(newtext)

if __name__ == '__main__':
    app = QApplication(sys.argv)
    f = QKOSCommunicationObject()
    qk = QKeysOnConsole(f)
    client = QKOSThread(f)
    client.daemon = True
    client.start()
    f.message.connect(qk.processIncoming)
    sys.exit(app.exec_())
